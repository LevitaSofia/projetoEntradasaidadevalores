# Configuração do pytest
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80"
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

# Configuração do coverage
[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
    "*/migrations/*",
    "*/settings/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@abstract"
]

# Configuração do Black (formatador)
[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# Configuração do isort (organizador de imports)
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# Configuração do MyPy (type checker)
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true
disallow_any_generics = true
disallow_untyped_calls = false
disallow_untyped_defs = false
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_unused_ignores = true
warn_return_any = false

# Módulos sem type hints
[[tool.mypy.overrides]]
module = [
    "telegram.*",
    "gspread.*",
    "google.*",
    "tenacity.*",
    "uvloop.*"
]
ignore_missing_imports = true

# Build system
[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

# Metadados do projeto
[project]
name = "telegram-finance-bot"
version = "1.0.0"
description = "Bot inteligente do Telegram para gestão financeira com IA"
authors = [
    {name = "Bot Finance Team", email = "team@botfinance.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
keywords = ["telegram", "bot", "finance", "openai", "sheets"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Office/Business :: Financial",
    "Topic :: Communications :: Chat"
]

dependencies = [
    "python-telegram-bot>=20",
    "openai>=1.40.0",
    "gspread",
    "google-auth",
    "pydantic>=2.0.0",
    "python-dotenv",
    "tenacity",
    "pytz"
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "black",
    "isort",
    "flake8",
    "mypy"
]

linux = [
    "uvloop"
]

[project.urls]
Homepage = "https://github.com/exemplo/telegram-finance-bot"
Documentation = "https://github.com/exemplo/telegram-finance-bot/wiki"
Repository = "https://github.com/exemplo/telegram-finance-bot.git"
"Bug Tracker" = "https://github.com/exemplo/telegram-finance-bot/issues"